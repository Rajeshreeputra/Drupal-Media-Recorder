<?php
/**
 * @file
 * Defines a "media_recorder" Form API render type field and provides
 * a widget to record the Audio and Video with MediaRecorder API.
 */

use Drupal\Core\Routing\RouteMatchInterface;

// FIXME - load the previously saved audio/video.

/**
 * Implements hook_help().
 */
function media_recorder_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.media_recorder':
      $output = file_get_contents(drupal_get_path('module', 'media_recorder') . '/README.txt');
      return nl2br($output);
  }
}

/**
 * Implements hook_theme().
 */
function media_recorder_theme() {
  return [
    'media_recorder' => [
      'variables' => [],
      'template' => 'media-recorder',
      'path' => drupal_get_path('module', 'media_recorder') . '/theme',
    ],
  ];
}

/**
 * Getter callback for retrieving media recorder settings with defaults.
 */
function media_recorder_get_settings() {
  // FIXME
  // return variable_get('media_recorder', array(
  return array(
     'constraints' => array(
       'audio' => TRUE,
       'video' => TRUE,
       'video_width' => array(
         'min' => 640,
         'ideal' => 1280,
         'max' => 1920,
       ),
       'video_height' => array(
         'min' => 480,
         'ideal' => 720,
         'max' => 1080,
       ),
     ),
     'css' => TRUE,
     'time_limit' => 300,
     'allowed_extensions' => 'wav mp3 m4a ogg oga weba wma mov mp4 wmv m4v mpeg avi ogv webp webm',
     'upload_directory' => '',
     'kaltura' => array(
       'enable' => FALSE,
       'server' => 0,
       'recorder' => 0,
       'profile' => 0,
       'category' => 0,
     ),
  );
}


/**
 * Implements hook_media_browser_plugin_info().
 */
function media_recorder_media_browser_plugin_info() {
  $info = array();

  $info['media_recorder'] = array(
    'title' => t('Recorder'),
    'class' => 'MediaRecorderBrowser',
  );

  return $info;
}


/**
 * Ajax submit handler for media_recorder_add form.
 *
 * @see media_recorder_add()
 */
function media_recorder_add_submit_ajax_callback(&$form, &$form_state) {
  $commands = array();
  $commands[] = ajax_command_replace('#media-recorder-ajax-wrapper form', \Drupal::service("renderer")->render($form));

  $fid = is_numeric($form_state['values']['media_recorder']['fid']) ? $form_state['values']['media_recorder']['fid'] : 0;
  if ($form_state['executed'] && $fid) {
    $file = file_load($fid);
    $file->preview = \Drupal::service("renderer")->render($preview);
    $file->url = file_create_url($file->uri);
    $script = '<script>Drupal.media.browser.selectMedia(' . \Drupal\Component\Serialization\Json::encode(array($file)) . '); Drupal.media.browser.submit();</script>';
    $commands[] = ajax_command_append('#media-recorder-ajax-wrapper', $script);
  }
  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Implements hook_form_alter().
 */
function media_recorder_form_field_ui_field_edit_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#instance']['widget']['type'] === 'media_recorder') {
    $form['instance']['settings']['file_extensions']['#element_validate'][] = '_media_recorder_extensions';
    $form['instance']['settings']['file_extensions']['#description'] .= '<br />NOTE: The media recorder widget requires that wav, ogg, and webm are present as allowed extensions. Please make sure they are set correctly here. You may also want other extensions for mobile device, such as mov.';
  }
}

/**
 * Validates that the file_extensions setting includes media recorder formats.
 *
 * @see media_recorder_form_field_ui_field_edit_form_alter()
 */
function _media_recorder_extensions($element, &$form_state) {
  $settings = media_recorder_get_settings();
  if (!empty($element['#value'])) {
    $extensions = preg_replace('/([, ]+\.?)/', ' ', trim(strtolower($element['#value'])));
    $extensions = array_filter(explode(' ', $extensions));
    if (!in_array('wav', $extensions) || !in_array('ogg', $extensions) || !in_array('webm', $extensions)) {
      form_error($element, t('The list of allowed extensions is not valid, be sure to include wav, ogg, and webm formats. <br />These are the current default media recorder allowed extensions: @extensions', array('@extensions' => $settings['allowed_extensions'])));
    }
  }
}